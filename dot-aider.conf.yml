#############
# Main model:

## Specify the model to use for the main chat
#model: xxx


#################
# Model settings:

## List known models which match the (partial) MODEL name
#list-models: xxx

## Specify a file with aider model settings for unknown models
#model-settings-file: .aider.model.settings.yml

## Specify a file with context window and costs for unknown models
#model-metadata-file: .aider.model.metadata.json

## Add a model alias (can be used multiple times)
#alias: xxx
## Specify multiple values like this:
#alias:
#  - xxx
#  - yyy
#  - zzz

## Set the reasoning_effort API parameter (default: not set)
#reasoning-effort: xxx

## Set the thinking token budget for models that support it. Use 0 to disable. (default: not set)
#thinking-tokens: xxx

## Verify the SSL cert when connecting to models (default: True)
#verify-ssl: true

## Timeout in seconds for API calls (default: None)
#timeout: xxx

## Specify what edit format the LLM should use (default depends on model)
#edit-format: xxx

## Use architect edit format for the main chat
#architect: false

## Enable/disable automatic acceptance of architect changes (default: True)
#auto-accept-architect: true

## Specify the model to use for commit messages and chat history summarization (default depends on --model)
#weak-model: xxx

## Specify the model to use for editor tasks (default depends on --model)
#editor-model: xxx

## Specify the edit format for the editor model (default: depends on editor model)
#editor-edit-format: xxx

## Only work with models that have meta-data available (default: True)
#show-model-warnings: true

## Check if model accepts settings like reasoning_effort/thinking_tokens (default: True)
#check-model-accepts-settings: true

## Soft limit on tokens for chat history, after which summarization begins. If unspecified, defaults to the model's max_chat_history_tokens.
#max-chat-history-tokens: xxx


##################
# Output settings:

## Use colors suitable for a dark terminal background (default: False)
#dark-mode: false

## Set the color for user input (default: #00cc00)
user-input-color: "#c6b0b4"

## Set the color for tool output (default: None)
#tool-output-color: "xxx"

## Set the color for tool error messages (default: #FF2222)
#tool-error-color: "#FF2222"

## Set the color for tool warning messages (default: #FFA500)
#tool-warning-color: "#FFA500"

## Set the color for assistant output (default: #0088ff)
#assistant-output-color: "#0088ff"

## Set the color for the completion menu (default: terminal's default text color)
#completion-menu-color: "xxx"

## Set the background color for the completion menu (default: terminal's default background color)
#completion-menu-bg-color: "xxx"

## Set the color for the current item in the completion menu (default: terminal's default background color)
#completion-menu-current-color: "xxx"

## Set the background color for the current item in the completion menu (default: terminal's default text color)
#completion-menu-current-bg-color: "xxx"

## Set the markdown code theme (default: default, other options include monokai, solarized-dark, solarized-light, or a Pygments builtin style, see https://pygments.org/styles for available themes)
#code-theme: default

## Show diffs when committing changes (default: False)
#show-diffs: false


###############
# Git settings:

## Only consider files in the current subtree of the git repository
subtree-only: true

## Enable/disable auto commit of LLM changes (default: True)
auto-commits: false

## Enable/disable watching files for ai coding comments (default: False)
watch-files: true

############
# Upgrading:

## Show release notes on first run of new version (default: None, ask user)
show-release-notes: false


#################
# Voice settings:

## Audio format for voice recording (default: wav). webm and mp3 require ffmpeg
#voice-format: wav

## Specify the language for voice using ISO 639-1 code (default: auto)
#voice-language: en

## Specify the input device name for voice recording
#voice-input-device: xxx


#################
# Other settings:

## Use VI editing mode in the terminal (default: False)
vim: true

## Enable/disable multi-line input mode with Meta-Enter to submit (default: False)
multiline: true

## Enable/disable terminal bell notifications when LLM responses are ready (default: False)
notifications: true

## Specify a command to run for notifications instead of the terminal bell. If not specified, a default command for your OS may be used.
notifications-command: "notify-send -a \"aider\" -r 1 -t 2000 -i \"$HOME/.config/dunst/icons/robot.svg\" \"Response ready\" \"Beep boop\""

## Specify which editor to use for the /editor command
editor: nvim
